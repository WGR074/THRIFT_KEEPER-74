import asyncio
import logging
import signal

from aiogram import Bot, Dispatcher

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s"
)
logger = logging.getLogger(__name__)

# –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ - —Ç–æ–∫–µ–Ω –ø—Ä—è–º–æ –≤ –∫–æ–¥–µ
BOT_TOKEN = "7717955107:AAHx0IQnaRy3TxNtRong3HK5DXUIan9cI70"

async def main():
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")

    bot = Bot(token=BOT_TOKEN)
    dp = Dispatcher()

    # –£–¥–∞–ª—è–µ–º –≤–µ–±—Ö—É–∫
    await bot.delete_webhook(drop_pending_updates=True)

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã
    from handlers.start import router as start_router
    from handlers.registration import router as registration_router
    from handlers.expenses import router as expenses_router
    from handlers.statistics import router as statistics_router
    from handlers.goals import router as goals_router
    from handlers.incomes import router as income_router
    from handlers.about import router as about_router
    from handlers.help import router as help_router
    

# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä
    dp.include_router(help_router)
    dp.include_router(about_router)
    dp.include_router(start_router)
    dp.include_router(registration_router)
    dp.include_router(expenses_router)
    dp.include_router(statistics_router)
    dp.include_router(goals_router)
    dp.include_router(income_router)

    logger.info("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π...")

    def stop_handler(*_):
        logger.info("üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞...")
        raise KeyboardInterrupt()

    signal.signal(signal.SIGINT, stop_handler)
    signal.signal(signal.SIGTERM, stop_handler)

    try:
        await dp.start_polling(bot)
    except KeyboardInterrupt:
        logger.info("üëã –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
    except Exception as e:
        logger.error(f"‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}", exc_info=True)
    finally:
        await bot.session.close()
        logger.info("üîå –°–µ—Å—Å–∏—è –±–æ—Ç–∞ –∑–∞–∫—Ä—ã—Ç–∞.")

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n‚õî –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é.")